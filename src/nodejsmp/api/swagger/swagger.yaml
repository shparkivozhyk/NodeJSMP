swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/random:
    x-swagger-router-controller: cities
    get:
      description: Returns random city from the database
      operationId: getRandomCity
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CityResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/cities:
    x-swagger-router-controller: cities
    get:
      description: Returns all cities from the database
      operationId: getAllCities
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/CityResponse"
              
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    post:
      description: Create new city
      operationId: createCity
      parameters:
      - in: body
        name: body
        schema:
          $ref: "#/definitions/CityResponse"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CityResponse"
              
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"        
  /api/cities/{id}:
   x-swagger-router-controller: cities
   delete:
    description: Delete city
    operationId: deleteCity
    parameters:
    - name: id
      in: path
      type: string
      required: true
    responses:
      "200":
        description: Success
        schema:
          $ref: "#/definitions/CityResponse"
      default:
        description: Error
        schema:
          $ref: "#/definitions/ErrorResponse"
   put: 
    description: Update city with selected id
    operationId: updateCity
    parameters:
    - in: body
      name: body
      required: false
      schema:
        $ref: "#/definitions/CityResponse"
    - name: id
      in: path
      required: true
      type: string
    responses:
      "200":
        description: Success
        schema:
          $ref: "#/definitions/CityResponse"
      default:
        description: Error
        schema:
          $ref: "#/definitions/ErrorResponse"
  /api/users:
    x-swagger-router-controller: users
    get:
      description: Returns all users from the database
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/UserSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create new user
      operationId: createUser
      parameters:
      - in: body
        name: body
        schema:
          $ref: "#/definitions/UserSchema"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/UserSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"        
  /api/users/{id}:
    x-swagger-router-controller: users
    delete:
      description: Delete user with selected id
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        type: string
        required: true
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/UserSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/products:
    x-swagger-router-controller: products
    get:
      description: Returns all products
      operationId: getProducts
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/ProductSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create new product
      operationId: createProduct
      parameters:
      - in: body
        name: body
        schema:
          $ref: "#/definitions/ProductSchema"
      responses:
        "200":
          description: Success
          schema: 
            $ref: "#/definitions/ProductSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /api/products/{id}:
    x-swagger-router-controller: products
    get:
      description: Returns product with selected id
      operationId: getProduct
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ProductSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete product with selected id
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ProductSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /api/products/{id}/reviews:
    x-swagger-router-controller: products
    get:
      description: Returns reviews for product with selected id
      operationId: getReviews
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ReviewSchema"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  CityResponse:
    type: object
    required:
    - name
    properties:
      name:
        type: string
      country:
        type: string
      capital:
        type: boolean
        default: false
      location:
        $ref: "#/definitions/Location"
      lastModifiedDate:
        type: string
  Location:
    type: object
    properties:
      lat:
        type: number
      long:
        type: number
  UserSchema:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
      password: 
        type: string
      email:
        type: string
      lastModifiedDate:
        type: string
  ProductSchema:
    type: object
    required:
      - id
      - title
    properties:
      id:
        type: string
      title:
        type: string
      price:
        type: string
      reviews:
        type: string
        default: ''
      lastModifiedDate:
        type: string
  ReviewSchema:
    type: object
    properties:
      reviews:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
